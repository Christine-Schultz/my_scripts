# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: redPacket_shop_unsubscribe_unbind_lotteryMachine_small_home

on:
    workflow_dispatch:
    schedule:
        - cron: '10 16 * * *'
    watch:
        types: started
    repository_dispatch:
        types: redPacket_shop_unsubscribe_unbind_lotteryMachine_small_home
jobs:
    jd_redPacket:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node_modules
              uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
            - name: npm install
              run: |
                  npm install
            - name: '运行 【全民开红包脚本】'
              run: |
                  node jd_redPacket.js
              env:
                  JD_COOKIE: ${{ secrets.JD_COOKIE }}
                  JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
                  JD_DEBUG: ${{ secrets.JD_DEBUG }}
                  PUSH_KEY: ${{ secrets.PUSH_KEY }}
                  BARK_PUSH: ${{ secrets.BARK_PUSH }}
                  TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
                  TG_USER_ID: ${{ secrets.TG_USER_ID }}
                  BARK_SOUND: ${{ secrets.BARK_SOUND }}
                  DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
                  DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
                  IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
    jd_shop:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node_modules
              uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
            - name: npm install
              run: |
                  npm install
            - name: '运行 【进店领豆脚本】'
              run: |
                  node jd_shop.js
              env:
                  JD_COOKIE: ${{ secrets.JD_COOKIE }}
                  JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
                  JD_DEBUG: ${{ secrets.JD_DEBUG }}
                  PUSH_KEY: ${{ secrets.PUSH_KEY }}
                  BARK_PUSH: ${{ secrets.BARK_PUSH }}
                  TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
                  TG_USER_ID: ${{ secrets.TG_USER_ID }}
                  BARK_SOUND: ${{ secrets.BARK_SOUND }}
                  DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
                  DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
                  IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}                                  
    jd_unsubscribe:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node_modules
              uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
            - name: npm install
              run: |
                  npm install
            - name: '运行 【京东取关商品】'
              run: |
                  node jd_unsubscribe.js
              env:
                  JD_COOKIE: ${{ secrets.JD_COOKIE }}
                  JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
                  JD_DEBUG: ${{ secrets.JD_DEBUG }}
                  UN_SUBSCRIBES: ${{ secrets.UN_SUBSCRIBES }}
                  PUSH_KEY: ${{ secrets.PUSH_KEY }}
                  BARK_PUSH: ${{ secrets.BARK_PUSH }}
                  TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
                  TG_USER_ID: ${{ secrets.TG_USER_ID }}
                  BARK_SOUND: ${{ secrets.BARK_SOUND }}
                  DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
                  DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
                  IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
    jd_unbind:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node_modules
              uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
            - name: npm install
              run: |
                  npm install
            - name: '运行 【注销京东会员卡】'
              run: |
                  #node jd_unbind.js
              env:
                  JD_COOKIE: ${{ secrets.JD_COOKIE }}
                  JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
                  JD_DEBUG: ${{ secrets.JD_DEBUG }}
                  UN_SUBSCRIBES: ${{ secrets.UN_SUBSCRIBES }}
                  PUSH_KEY: ${{ secrets.PUSH_KEY }}
                  BARK_PUSH: ${{ secrets.BARK_PUSH }}
                  TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
                  TG_USER_ID: ${{ secrets.TG_USER_ID }}
                  BARK_SOUND: ${{ secrets.BARK_SOUND }}
                  DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
                  DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
                  IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
    jd_lotteryMachine:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node_modules
              uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
            - name: npm install
              run: |
                  npm install
            - name: '运行 【京东抽奖机】'
              run: |
                  node jd_lotteryMachine.js
              env:
                  JD_COOKIE: ${{ secrets.JD_COOKIE }}
                  JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
                  JD_DEBUG: ${{ secrets.JD_DEBUG }}
                  PUSH_KEY: ${{ secrets.PUSH_KEY }}
                  BARK_PUSH: ${{ secrets.BARK_PUSH }}
                  BARK_SOUND: ${{ secrets.BARK_SOUND }}
                  TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
                  TG_USER_ID: ${{ secrets.TG_USER_ID }}
                  DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
                  DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
                  IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
    jd_small_home:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Cache node_modules
              uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
              env:
                  cache-name: cache-node-modules
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
            - name: npm install
              run: |
                  npm install
            - name: '运行 【东东小窝】'
              run: |
                  node jd_small_home.js
              env:
                  JD_COOKIE: ${{ secrets.JD_COOKIE }}
                  JD_USER_AGENT: ${{ secrets.JD_USER_AGENT }}
                  JD_DEBUG: ${{ secrets.JD_DEBUG }}
                  PUSH_KEY: ${{ secrets.PUSH_KEY }}
                  BARK_PUSH: ${{ secrets.BARK_PUSH }}
                  BARK_SOUND: ${{ secrets.BARK_SOUND }}
                  TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
                  TG_USER_ID: ${{ secrets.TG_USER_ID }}
                  DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
                  DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
                  IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
                  JD_818_SHAREID_NOTIFY: ${{ secrets.JD_818_SHAREID_NOTIFY }}